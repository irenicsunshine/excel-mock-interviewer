version: '3.8'

services:
  # PostgreSQL database
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: interview_db
      POSTGRES_USER: interview_user
      POSTGRES_PASSWORD: interview_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U interview_user -d interview_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for job queue
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI backend
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://interview_user:interview_pass@db:5432/interview_db
      - REDIS_URL=redis://redis:6379/0
      - MOCK_MODE=${MOCK_MODE:-true}
      - GROQ_API_KEY=${GROQ_API_KEY:-}
    volumes:
      - ./docs:/app/docs:ro
      - upload_data:/app/uploads
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Evaluation worker
  worker:
    build: ./backend
    environment:
      - DATABASE_URL=postgresql://interview_user:interview_pass@db:5432/interview_db
      - REDIS_URL=redis://redis:6379/0
      - MOCK_MODE=${MOCK_MODE:-true}
      - GROQ_API_KEY=${GROQ_API_KEY:-}
    volumes:
      - ./docs:/app/docs:ro
      - upload_data:/app/uploads
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: python -m app.workers.evaluator_worker

volumes:
  postgres_data:
  redis_data:
  upload_data:
